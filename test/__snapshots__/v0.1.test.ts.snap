// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`v0.1 (strict) > image: valid 'image_complete.json' (strict) 1`] = `
{
  "data": {
    "multiscales": [
      {
        "datasets": [
          {
            "path": "path/to/0",
          },
          {
            "path": "1",
          },
          {
            "path": "2",
          },
        ],
        "metadata": {
          "method": "skimage.transform.pyramid_gaussian",
          "version": "0.16.1",
        },
        "name": "example",
        "version": "0.1",
      },
    ],
    "omero": {
      "channels": [
        {
          "active": true,
          "color": "0000FF",
          "family": "linear",
          "label": "1234",
          "window": {
            "end": 1765,
            "max": 2555,
            "min": 5,
            "start": 0,
          },
        },
      ],
    },
  },
  "success": true,
}
`;

exports[`v0.1 (strict) > image: valid 'image_complete_no_omero.json' (strict) 1`] = `
{
  "data": {
    "multiscales": [
      {
        "datasets": [
          {
            "path": "path/to/0",
          },
        ],
        "metadata": {
          "method": "skimage.transform.pyramid_gaussian",
          "version": "0.16.1",
        },
        "name": "example",
        "version": "0.1",
      },
    ],
  },
  "success": true,
}
`;

exports[`v0.1 > image: valid 'image.json' 1`] = `
{
  "data": {
    "multiscales": [
      {
        "datasets": [
          {
            "path": "path/to/0",
          },
          {
            "path": "1",
          },
          {
            "path": "2",
          },
        ],
      },
    ],
  },
  "success": true,
}
`;

exports[`v0.1 > image: valid 'image_complete.json' 1`] = `
{
  "data": {
    "multiscales": [
      {
        "datasets": [
          {
            "path": "path/to/0",
          },
          {
            "path": "1",
          },
          {
            "path": "2",
          },
        ],
        "metadata": {
          "method": "skimage.transform.pyramid_gaussian",
          "version": "0.16.1",
        },
        "name": "example",
        "version": "0.1",
      },
    ],
    "omero": {
      "channels": [
        {
          "active": true,
          "color": "0000FF",
          "family": "linear",
          "label": "1234",
          "window": {
            "end": 1765,
            "max": 2555,
            "min": 5,
            "start": 0,
          },
        },
      ],
    },
  },
  "success": true,
}
`;

exports[`v0.1 > image: valid 'image_complete_no_omero.json' 1`] = `
{
  "data": {
    "multiscales": [
      {
        "datasets": [
          {
            "path": "path/to/0",
          },
        ],
        "metadata": {
          "method": "skimage.transform.pyramid_gaussian",
          "version": "0.16.1",
        },
        "name": "example",
        "version": "0.1",
      },
    ],
  },
  "success": true,
}
`;

exports[`v0.1 > image: valid 'missing_name.json' 1`] = `
{
  "data": {
    "multiscales": [
      {
        "datasets": [
          {
            "path": "path/to/0",
          },
        ],
        "metadata": {
          "method": "skimage.transform.pyramid_gaussian",
          "version": "0.16.1",
        },
        "version": "0.1",
      },
    ],
  },
  "success": true,
}
`;

exports[`v0.1 > image: valid 'missing_type.json' 1`] = `
{
  "data": {
    "multiscales": [
      {
        "datasets": [
          {
            "path": "path/to/0",
          },
        ],
        "metadata": {
          "method": "skimage.transform.pyramid_gaussian",
          "version": "0.16.1",
        },
        "name": "example",
        "version": "0.1",
      },
    ],
  },
  "success": true,
}
`;

exports[`v0.1 > image: valid 'missing_version.json' 1`] = `
{
  "data": {
    "multiscales": [
      {
        "datasets": [
          {
            "path": "path/to/0",
          },
        ],
        "metadata": {
          "method": "skimage.transform.pyramid_gaussian",
          "version": "0.16.1",
        },
        "name": "example",
      },
    ],
    "omero": {
      "channels": [
        {
          "active": true,
          "color": "0000FF",
          "family": "linear",
          "label": "1234",
          "window": {
            "end": 1765,
            "max": 2555,
            "min": 5,
            "start": 0,
          },
        },
      ],
    },
  },
  "success": true,
}
`;

exports[`v0.1 > plate: invalid 'invalid_channels_color.json' 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "number",
    "path": [
      "omero",
      "channels",
      0,
      "color"
    ],
    "message": "Expected string, received number"
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: invalid 'invalid_channels_window.json' 1`] = `
{
  "error": [ZodError: [
  {
    "received": "0.2",
    "code": "invalid_literal",
    "expected": "0.1",
    "path": [
      "multiscales",
      0,
      "version"
    ],
    "message": "Invalid literal value, expected \\"0.1\\""
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "string",
    "path": [
      "omero",
      "channels",
      0,
      "window",
      "end"
    ],
    "message": "Expected number, received string"
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: invalid 'invalid_path.json' 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "number",
    "path": [
      "multiscales",
      0,
      "datasets",
      1,
      "path"
    ],
    "message": "Expected string, received number"
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: invalid 'missing_datasets.json' 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_type",
    "expected": "array",
    "received": "undefined",
    "path": [
      "multiscales",
      0,
      "datasets"
    ],
    "message": "Required"
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: invalid 'missing_path.json' 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "multiscales",
      0,
      "datasets",
      0,
      "path"
    ],
    "message": "Required"
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: invalid 'no_datasets.json' 1`] = `
{
  "error": [ZodError: [
  {
    "code": "too_small",
    "minimum": 1,
    "type": "array",
    "inclusive": true,
    "exact": false,
    "message": "Array must contain at least 1 element(s)",
    "path": [
      "multiscales",
      0,
      "datasets"
    ]
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: invalid 'no_multiscales.json' 1`] = `
{
  "error": [ZodError: [
  {
    "code": "too_small",
    "minimum": 1,
    "type": "array",
    "inclusive": true,
    "exact": false,
    "message": "Array must contain at least 1 element(s)",
    "path": [
      "multiscales"
    ]
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: valid 'empty_wells.json' 1`] = `
{
  "error": [ZodError: [
  {
    "code": "too_small",
    "minimum": 1,
    "type": "array",
    "inclusive": true,
    "exact": false,
    "message": "Array must contain at least 1 element(s)",
    "path": [
      "plate",
      "wells"
    ]
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: valid 'invalid_fieldcount.json' 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "string",
    "path": [
      "plate",
      "acquisitions",
      0,
      "maximumfieldcount"
    ],
    "message": "Expected number, received string"
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: valid 'minimal_acquisition.json' 1`] = `
{
  "data": {
    "plate": {
      "acquisitions": [
        {
          "id": 1,
          "name": "SHOULD have a name",
        },
        {
          "id": 2,
        },
      ],
      "columns": [
        {
          "name": "1",
        },
      ],
      "field_count": 1,
      "name": "plate name",
      "rows": [
        {
          "name": "A",
        },
      ],
      "version": "0.1",
      "wells": [
        {
          "path": "A/3",
        },
      ],
    },
  },
  "success": true,
}
`;

exports[`v0.1 > plate: valid 'missing_acquisition_id.json' 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "plate",
      "acquisitions",
      0,
      "id"
    ],
    "message": "Required"
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: valid 'missing_column_name.json' 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "plate",
      "columns",
      0,
      "name"
    ],
    "message": "Required"
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: valid 'missing_columns.json' 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_type",
    "expected": "array",
    "received": "undefined",
    "path": [
      "plate",
      "columns"
    ],
    "message": "Required"
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: valid 'missing_rows.json' 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_type",
    "expected": "array",
    "received": "undefined",
    "path": [
      "plate",
      "rows"
    ],
    "message": "Required"
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: valid 'missing_version.json' 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_literal",
    "expected": "0.1",
    "path": [
      "plate",
      "version"
    ],
    "message": "Invalid literal value, expected \\"0.1\\""
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: valid 'missing_well_path.json' 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "plate",
      "wells",
      0,
      "path"
    ],
    "message": "Required"
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: valid 'missing_wells.json' 1`] = `
{
  "error": [ZodError: [
  {
    "code": "invalid_type",
    "expected": "array",
    "received": "undefined",
    "path": [
      "plate",
      "wells"
    ],
    "message": "Required"
  }
]],
  "success": false,
}
`;

exports[`v0.1 > plate: valid 'plate.json' 1`] = `
{
  "data": {
    "plate": {
      "columns": [
        {
          "name": "1",
        },
        {
          "name": "2",
        },
        {
          "name": "3",
        },
      ],
      "field_count": 1,
      "name": "plate name",
      "rows": [
        {
          "name": "A",
        },
        {
          "name": "B",
        },
      ],
      "version": "0.1",
      "wells": [
        {
          "path": "A/3",
        },
        {
          "path": "B/2",
        },
        {
          "path": "A/1",
        },
        {
          "path": "B/3",
        },
      ],
    },
  },
  "success": true,
}
`;

exports[`v0.1 > plate: valid 'plate_acquisition.json' 1`] = `
{
  "data": {
    "plate": {
      "acquisitions": [
        {
          "description": "First Acquisition",
          "id": 1,
          "maximumfieldcount": 2,
          "name": "Meas_01(2012-07-31_10-41-12)",
          "starttime": 1343731272000,
        },
        {
          "id": 2,
          "maximumfieldcount": 2,
          "name": "Meas_02(201207-31_11-56-41)",
          "starttime": 1343735801000,
        },
      ],
      "columns": [
        {
          "name": "1",
        },
        {
          "name": "2",
        },
        {
          "name": "3",
        },
      ],
      "field_count": 1,
      "name": "plate name",
      "rows": [
        {
          "name": "A",
        },
        {
          "name": "B",
        },
      ],
      "version": "0.1",
      "wells": [
        {
          "path": "A/3",
        },
        {
          "path": "B/2",
        },
        {
          "path": "A/1",
        },
        {
          "path": "B/3",
        },
      ],
    },
  },
  "success": true,
}
`;

exports[`v0.1 > well: valid 'well.json' 1`] = `
{
  "data": {
    "well": {
      "images": [
        {
          "acquisition": 0,
          "path": "0",
        },
        {
          "acquisition": 3,
          "path": "1",
        },
      ],
      "version": "0.1",
    },
  },
  "success": true,
}
`;
